{
  "openapi": "3.0.3",
  "servers": [
    {
      "url": "https://api.example.com",
      "description": "Production server"
    },
    {
      "url": "https://api.staging.example.com",
      "description": "Staging server"
    },
    {
      "url": "https://api.dev.example.com",
      "description": "Dev server"
    }
  ],
  "info": {
    "title": "Playground Matrix Resource",
    "description": "",
    "termsOfService": "",
    "version": "73.0.0"
  },
  "externalDocs": {
    "description": "",
    "url": ""
  },
  "tags": [
    {
      "name": "Board",
      "description": "Manage boards in storage."
    },
    {
      "name": "Epic",
      "description": "Manage epics in storage."
    },
    {
      "name": "Backlog",
      "description": "Manage backlogs in storage."
    },
    {
      "name": "Flow",
      "description": "Manage flows in storage."
    },
    {
      "name": "Milestone",
      "description": "Manage milestones in storage."
    },
    {
      "name": "Note",
      "description": "Manage notes in storage."
    },
    {
      "name": "Project",
      "description": "Manage projects in storage."
    },
    {
      "name": "Release",
      "description": "Manage releases in storage."
    },
    {
      "name": "Roadmap",
      "description": "Manage roadmaps in storage."
    },
    {
      "name": "Source",
      "description": "Manage sources in storage."
    },
    {
      "name": "Sprint",
      "description": "Manage sprints in storage."
    },
    {
      "name": "Tag",
      "description": "Manage tags in storage."
    },
    {
      "name": "Team",
      "description": "Manage teams in storage."
    },
    {
      "name": "Ticket",
      "description": "Manage tickets in storage."
    },
    {
      "name": "Version",
      "description": "Manage versions in storage."
    }
  ],
  "paths": {
    "/api/boards/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The board id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get a board by id.",
        "operationId": "get_board",
        "responses": {
          "200": {
            "description": "The board data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Board"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Board"
        ],
        "summary": "Delete a board by id.",
        "operationId": "delete_board",
        "responses": {
          "204": {
            "description": "The board has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The board is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Board"
        ],
        "summary": "Update a board by id.",
        "operationId": "patch_board",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Board fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_type": {
                    "description": "The board type of this board.",
                    "type": "string",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the board.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the board.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the board.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the board.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the board.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the board.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the board.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the board.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the board. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the board. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated board.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Board"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/boards": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get boards from the index.",
        "operationId": "get_boards_index",
        "responses": {
          "200": {
            "description": "Get the boards from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Board"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Board"
        ],
        "summary": "Create a board.",
        "operationId": "post_board",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Board fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_type": {
                    "description": "The board type of this board.",
                    "type": "string",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this board.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this board.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the board.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the board.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the board.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the board.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the board.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the board.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the board.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the board.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the board. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the board. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created boards.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Board"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/boards/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The board id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Board"
        ],
        "summary": "Unlock a board by id.",
        "operationId": "lock_board",
        "responses": {
          "204": {
            "description": "The board has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Board"
        ],
        "summary": "Lock a board by id.",
        "operationId": "unlock_board",
        "responses": {
          "200": {
            "description": "The unlocked board.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Board"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/boards/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The board id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Board"
        ],
        "summary": "Restore a board by id.",
        "operationId": "restore_board",
        "responses": {
          "200": {
            "description": "The restored board.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Board"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/epics/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The epic id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Epic"
        ],
        "summary": "Get a epic by id.",
        "operationId": "get_epic",
        "responses": {
          "200": {
            "description": "The epic data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Epic"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Epic"
        ],
        "summary": "Delete a epic by id.",
        "operationId": "delete_epic",
        "responses": {
          "204": {
            "description": "The epic has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The epic is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Epic"
        ],
        "summary": "Update a epic by id.",
        "operationId": "patch_epic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Epic fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_type": {
                    "description": "The epic type of this epic.",
                    "type": "string",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the epic.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the epic.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the epic.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the epic.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the epic.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the epic.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the epic.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the epic.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the epic. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the epic. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated epic.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Epic"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/epics": {
      "get": {
        "tags": [
          "Epic"
        ],
        "summary": "Get epics from the index.",
        "operationId": "get_epics_index",
        "responses": {
          "200": {
            "description": "Get the epics from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Epic"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Epic"
        ],
        "summary": "Create a epic.",
        "operationId": "post_epic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Epic fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_type": {
                    "description": "The epic type of this epic.",
                    "type": "string",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this epic.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this epic.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the epic.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the epic.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the epic.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the epic.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the epic.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the epic.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the epic.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the epic.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the epic. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the epic. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created epics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Epic"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/epics/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The epic id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Epic"
        ],
        "summary": "Unlock a epic by id.",
        "operationId": "lock_epic",
        "responses": {
          "204": {
            "description": "The epic has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Epic"
        ],
        "summary": "Lock a epic by id.",
        "operationId": "unlock_epic",
        "responses": {
          "200": {
            "description": "The unlocked epic.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Epic"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/epics/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The epic id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Epic"
        ],
        "summary": "Restore a epic by id.",
        "operationId": "restore_epic",
        "responses": {
          "200": {
            "description": "The restored epic.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Epic"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/backlogs/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The backlog id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Backlog"
        ],
        "summary": "Get a backlog by id.",
        "operationId": "get_backlog",
        "responses": {
          "200": {
            "description": "The backlog data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Backlog"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Backlog"
        ],
        "summary": "Delete a backlog by id.",
        "operationId": "delete_backlog",
        "responses": {
          "204": {
            "description": "The backlog has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The backlog is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Backlog"
        ],
        "summary": "Update a backlog by id.",
        "operationId": "patch_backlog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Backlog fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "backlog_type": {
                    "description": "The backlog type of this backlog.",
                    "type": "string",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the backlog.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the backlog.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "canceled": {
                    "description": "Flags: canceled",
                    "type": "boolean"
                  },
                  "closed": {
                    "description": "Flags: closed",
                    "type": "boolean"
                  },
                  "completed": {
                    "description": "Flags: completed",
                    "type": "boolean"
                  },
                  "duplicate": {
                    "description": "Flags: duplicate",
                    "type": "boolean"
                  },
                  "fixed": {
                    "description": "Flags: fixed",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "released": {
                    "description": "Flags: released",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "resolved": {
                    "description": "Flags: resolved",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the backlog.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "title": {
                    "description": "The title of the backlog.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "byline": {
                    "description": "The byline of the backlog.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the backlog.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the backlog.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the backlog.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the backlog.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the backlog. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the backlog. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated backlog.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Backlog"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/backlogs": {
      "get": {
        "tags": [
          "Backlog"
        ],
        "summary": "Get backlogs from the index.",
        "operationId": "get_backlogs_index",
        "responses": {
          "200": {
            "description": "Get the backlogs from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Backlog"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Backlog"
        ],
        "summary": "Create a backlog.",
        "operationId": "post_backlog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Backlog fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "backlog_type": {
                    "description": "The backlog type of this backlog.",
                    "type": "string",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this backlog.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this backlog.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the backlog.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the backlog.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "canceled": {
                    "description": "Flags: canceled",
                    "type": "boolean"
                  },
                  "closed": {
                    "description": "Flags: closed",
                    "type": "boolean"
                  },
                  "completed": {
                    "description": "Flags: completed",
                    "type": "boolean"
                  },
                  "duplicate": {
                    "description": "Flags: duplicate",
                    "type": "boolean"
                  },
                  "fixed": {
                    "description": "Flags: fixed",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "released": {
                    "description": "Flags: released",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "resolved": {
                    "description": "Flags: resolved",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the backlog.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "title": {
                    "description": "The title of the backlog.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "byline": {
                    "description": "The byline of the backlog.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the backlog.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the backlog.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the backlog.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the backlog.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the backlog. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the backlog. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created backlogs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Backlog"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/backlogs/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The backlog id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Backlog"
        ],
        "summary": "Unlock a backlog by id.",
        "operationId": "lock_backlog",
        "responses": {
          "204": {
            "description": "The backlog has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Backlog"
        ],
        "summary": "Lock a backlog by id.",
        "operationId": "unlock_backlog",
        "responses": {
          "200": {
            "description": "The unlocked backlog.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Backlog"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/backlogs/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The backlog id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Backlog"
        ],
        "summary": "Restore a backlog by id.",
        "operationId": "restore_backlog",
        "responses": {
          "200": {
            "description": "The restored backlog.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Backlog"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/flows/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The flow id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get a flow by id.",
        "operationId": "get_flow",
        "responses": {
          "200": {
            "description": "The flow data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Flow"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Flow"
        ],
        "summary": "Delete a flow by id.",
        "operationId": "delete_flow",
        "responses": {
          "204": {
            "description": "The flow has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The flow is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Flow"
        ],
        "summary": "Update a flow by id.",
        "operationId": "patch_flow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Flow fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this flow.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this flow.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_type": {
                    "description": "The flow type of this flow.",
                    "type": "string",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this flow.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this flow.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this flow.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the flow.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the flow.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the flow.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the flow.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the flow.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the flow.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the flow.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the flow.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the flow. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the flow. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated flow.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Flow"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/flows": {
      "get": {
        "tags": [
          "Flow"
        ],
        "summary": "Get flows from the index.",
        "operationId": "get_flows_index",
        "responses": {
          "200": {
            "description": "Get the flows from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Flow"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Flow"
        ],
        "summary": "Create a flow.",
        "operationId": "post_flow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Flow fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this flow.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this flow.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_type": {
                    "description": "The flow type of this flow.",
                    "type": "string",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this flow.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this flow.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this flow.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this flow.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the flow.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the flow.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the flow.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the flow.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the flow.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the flow.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the flow.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the flow.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the flow. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the flow. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created flows.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Flow"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/flows/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The flow id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Flow"
        ],
        "summary": "Unlock a flow by id.",
        "operationId": "lock_flow",
        "responses": {
          "204": {
            "description": "The flow has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Flow"
        ],
        "summary": "Lock a flow by id.",
        "operationId": "unlock_flow",
        "responses": {
          "200": {
            "description": "The unlocked flow.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Flow"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/flows/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The flow id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Flow"
        ],
        "summary": "Restore a flow by id.",
        "operationId": "restore_flow",
        "responses": {
          "200": {
            "description": "The restored flow.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Flow"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/milestones/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The milestone id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Milestone"
        ],
        "summary": "Get a milestone by id.",
        "operationId": "get_milestone",
        "responses": {
          "200": {
            "description": "The milestone data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Milestone"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Milestone"
        ],
        "summary": "Delete a milestone by id.",
        "operationId": "delete_milestone",
        "responses": {
          "204": {
            "description": "The milestone has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The milestone is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Milestone"
        ],
        "summary": "Update a milestone by id.",
        "operationId": "patch_milestone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Milestone fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_type": {
                    "description": "The milestone type of this milestone.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the milestone.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the milestone.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the milestone.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the milestone.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the milestone.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the milestone.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the milestone.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the milestone.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the milestone. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the milestone. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated milestone.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Milestone"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/milestones": {
      "get": {
        "tags": [
          "Milestone"
        ],
        "summary": "Get milestones from the index.",
        "operationId": "get_milestones_index",
        "responses": {
          "200": {
            "description": "Get the milestones from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Milestone"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Milestone"
        ],
        "summary": "Create a milestone.",
        "operationId": "post_milestone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Milestone fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_type": {
                    "description": "The milestone type of this milestone.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this milestone.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this milestone.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the milestone.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the milestone.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the milestone.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the milestone.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the milestone.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the milestone.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the milestone.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the milestone.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the milestone. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the milestone. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created milestones.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Milestone"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/milestones/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The milestone id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Milestone"
        ],
        "summary": "Unlock a milestone by id.",
        "operationId": "lock_milestone",
        "responses": {
          "204": {
            "description": "The milestone has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Milestone"
        ],
        "summary": "Lock a milestone by id.",
        "operationId": "unlock_milestone",
        "responses": {
          "200": {
            "description": "The unlocked milestone.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Milestone"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/milestones/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The milestone id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Milestone"
        ],
        "summary": "Restore a milestone by id.",
        "operationId": "restore_milestone",
        "responses": {
          "200": {
            "description": "The restored milestone.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Milestone"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/notes/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The note id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Get a note by id.",
        "operationId": "get_note",
        "responses": {
          "200": {
            "description": "The note data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Note"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Note"
        ],
        "summary": "Delete a note by id.",
        "operationId": "delete_note",
        "responses": {
          "204": {
            "description": "The note has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The note is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Note"
        ],
        "summary": "Update a note by id.",
        "operationId": "patch_note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Note fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this note.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this note.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_type": {
                    "description": "The note type of this note.",
                    "type": "string",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the note.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the note.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the note.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the note.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the note.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the note.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the note.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the note.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the note. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the note. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated note.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Note"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notes": {
      "get": {
        "tags": [
          "Note"
        ],
        "summary": "Get notes from the index.",
        "operationId": "get_notes_index",
        "responses": {
          "200": {
            "description": "Get the notes from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Note"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Note"
        ],
        "summary": "Create a note.",
        "operationId": "post_note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Note fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this note.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this note.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_type": {
                    "description": "The note type of this note.",
                    "type": "string",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this note.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the note.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the note.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the note.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the note.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the note.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the note.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the note.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the note.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the note. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the note. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created notes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Note"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notes/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The note id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Note"
        ],
        "summary": "Unlock a note by id.",
        "operationId": "lock_note",
        "responses": {
          "204": {
            "description": "The note has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Note"
        ],
        "summary": "Lock a note by id.",
        "operationId": "unlock_note",
        "responses": {
          "200": {
            "description": "The unlocked note.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Note"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/notes/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The note id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Note"
        ],
        "summary": "Restore a note by id.",
        "operationId": "restore_note",
        "responses": {
          "200": {
            "description": "The restored note.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Note"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/projects/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The project id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get a project by id.",
        "operationId": "get_project",
        "responses": {
          "200": {
            "description": "The project data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete a project by id.",
        "operationId": "delete_project",
        "responses": {
          "204": {
            "description": "The project has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The project is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Project"
        ],
        "summary": "Update a project by id.",
        "operationId": "patch_project",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Project fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_type": {
                    "description": "The project type of this project.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the project.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the project.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the project.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the project.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the project.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the project.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the project.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the project.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the project. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the project. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated project.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get projects from the index.",
        "operationId": "get_projects_index",
        "responses": {
          "200": {
            "description": "Get the projects from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create a project.",
        "operationId": "post_project",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Project fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_type": {
                    "description": "The project type of this project.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this project.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this project.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the project.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the project.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the project.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the project.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the project.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the project.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the project.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the project.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the project. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the project. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created projects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The project id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Unlock a project by id.",
        "operationId": "lock_project",
        "responses": {
          "204": {
            "description": "The project has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Lock a project by id.",
        "operationId": "unlock_project",
        "responses": {
          "200": {
            "description": "The unlocked project.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/projects/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The project id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Restore a project by id.",
        "operationId": "restore_project",
        "responses": {
          "200": {
            "description": "The restored project.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Project"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/releases/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The release id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Release"
        ],
        "summary": "Get a release by id.",
        "operationId": "get_release",
        "responses": {
          "200": {
            "description": "The release data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Release"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Release"
        ],
        "summary": "Delete a release by id.",
        "operationId": "delete_release",
        "responses": {
          "204": {
            "description": "The release has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The release is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Release"
        ],
        "summary": "Update a release by id.",
        "operationId": "patch_release",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Release fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_type": {
                    "description": "The release type of this release.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the release.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the release.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the release.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the release.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the release.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the release.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the release.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the release.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the release. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the release. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated release.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Release"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/releases": {
      "get": {
        "tags": [
          "Release"
        ],
        "summary": "Get releases from the index.",
        "operationId": "get_releases_index",
        "responses": {
          "200": {
            "description": "Get the releases from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Release"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Release"
        ],
        "summary": "Create a release.",
        "operationId": "post_release",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Release fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_type": {
                    "description": "The release type of this release.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this release.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this release.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the release.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the release.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the release.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the release.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the release.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the release.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the release.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the release.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the release. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the release. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created releases.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Release"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/releases/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The release id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Release"
        ],
        "summary": "Unlock a release by id.",
        "operationId": "lock_release",
        "responses": {
          "204": {
            "description": "The release has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Release"
        ],
        "summary": "Lock a release by id.",
        "operationId": "unlock_release",
        "responses": {
          "200": {
            "description": "The unlocked release.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Release"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/releases/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The release id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Release"
        ],
        "summary": "Restore a release by id.",
        "operationId": "restore_release",
        "responses": {
          "200": {
            "description": "The restored release.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Release"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/roadmaps/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The roadmap id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Roadmap"
        ],
        "summary": "Get a roadmap by id.",
        "operationId": "get_roadmap",
        "responses": {
          "200": {
            "description": "The roadmap data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Roadmap"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Roadmap"
        ],
        "summary": "Delete a roadmap by id.",
        "operationId": "delete_roadmap",
        "responses": {
          "204": {
            "description": "The roadmap has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The roadmap is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Roadmap"
        ],
        "summary": "Update a roadmap by id.",
        "operationId": "patch_roadmap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Roadmap fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_type": {
                    "description": "The roadmap type of this roadmap.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the roadmap.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the roadmap.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the roadmap.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the roadmap.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the roadmap.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the roadmap.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the roadmap.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the roadmap.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the roadmap. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the roadmap. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated roadmap.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Roadmap"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roadmaps": {
      "get": {
        "tags": [
          "Roadmap"
        ],
        "summary": "Get roadmaps from the index.",
        "operationId": "get_roadmaps_index",
        "responses": {
          "200": {
            "description": "Get the roadmaps from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Roadmap"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Roadmap"
        ],
        "summary": "Create a roadmap.",
        "operationId": "post_roadmap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Roadmap fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_type": {
                    "description": "The roadmap type of this roadmap.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this roadmap.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this roadmap.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the roadmap.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the roadmap.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the roadmap.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the roadmap.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the roadmap.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the roadmap.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the roadmap.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the roadmap.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the roadmap. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the roadmap. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created roadmaps.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Roadmap"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roadmaps/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The roadmap id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Roadmap"
        ],
        "summary": "Unlock a roadmap by id.",
        "operationId": "lock_roadmap",
        "responses": {
          "204": {
            "description": "The roadmap has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Roadmap"
        ],
        "summary": "Lock a roadmap by id.",
        "operationId": "unlock_roadmap",
        "responses": {
          "200": {
            "description": "The unlocked roadmap.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Roadmap"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/roadmaps/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The roadmap id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Roadmap"
        ],
        "summary": "Restore a roadmap by id.",
        "operationId": "restore_roadmap",
        "responses": {
          "200": {
            "description": "The restored roadmap.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Roadmap"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/sources/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The source id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Source"
        ],
        "summary": "Get a source by id.",
        "operationId": "get_source",
        "responses": {
          "200": {
            "description": "The source data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Source"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Source"
        ],
        "summary": "Delete a source by id.",
        "operationId": "delete_source",
        "responses": {
          "204": {
            "description": "The source has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The source is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Source"
        ],
        "summary": "Update a source by id.",
        "operationId": "patch_source",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Source fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_type": {
                    "description": "The source type of this source.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the source.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the source.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the source.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the source.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the source.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the source.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the source.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the source.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the source. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the source. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated source.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Source"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sources": {
      "get": {
        "tags": [
          "Source"
        ],
        "summary": "Get sources from the index.",
        "operationId": "get_sources_index",
        "responses": {
          "200": {
            "description": "Get the sources from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Source"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Source"
        ],
        "summary": "Create a source.",
        "operationId": "post_source",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Source fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_type": {
                    "description": "The source type of this source.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this source.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this source.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the source.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the source.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the source.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the source.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the source.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the source.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the source.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the source.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the source. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the source. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created sources.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Source"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sources/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The source id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Source"
        ],
        "summary": "Unlock a source by id.",
        "operationId": "lock_source",
        "responses": {
          "204": {
            "description": "The source has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Source"
        ],
        "summary": "Lock a source by id.",
        "operationId": "unlock_source",
        "responses": {
          "200": {
            "description": "The unlocked source.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Source"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/sources/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The source id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Source"
        ],
        "summary": "Restore a source by id.",
        "operationId": "restore_source",
        "responses": {
          "200": {
            "description": "The restored source.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Source"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/sprints/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The sprint id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Sprint"
        ],
        "summary": "Get a sprint by id.",
        "operationId": "get_sprint",
        "responses": {
          "200": {
            "description": "The sprint data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Sprint"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Sprint"
        ],
        "summary": "Delete a sprint by id.",
        "operationId": "delete_sprint",
        "responses": {
          "204": {
            "description": "The sprint has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The sprint is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Sprint"
        ],
        "summary": "Update a sprint by id.",
        "operationId": "patch_sprint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Sprint fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_type": {
                    "description": "The sprint type of this sprint.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the sprint.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the sprint.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the sprint.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the sprint.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the sprint.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the sprint.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the sprint.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the sprint.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the sprint. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the sprint. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated sprint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Sprint"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sprints": {
      "get": {
        "tags": [
          "Sprint"
        ],
        "summary": "Get sprints from the index.",
        "operationId": "get_sprints_index",
        "responses": {
          "200": {
            "description": "Get the sprints from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Sprint"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Sprint"
        ],
        "summary": "Create a sprint.",
        "operationId": "post_sprint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Sprint fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_type": {
                    "description": "The sprint type of this sprint.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this sprint.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this sprint.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the sprint.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the sprint.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the sprint.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the sprint.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the sprint.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the sprint.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the sprint.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the sprint.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the sprint. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the sprint. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created sprints.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Sprint"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sprints/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The sprint id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Sprint"
        ],
        "summary": "Unlock a sprint by id.",
        "operationId": "lock_sprint",
        "responses": {
          "204": {
            "description": "The sprint has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Sprint"
        ],
        "summary": "Lock a sprint by id.",
        "operationId": "unlock_sprint",
        "responses": {
          "200": {
            "description": "The unlocked sprint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Sprint"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/sprints/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The sprint id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Sprint"
        ],
        "summary": "Restore a sprint by id.",
        "operationId": "restore_sprint",
        "responses": {
          "200": {
            "description": "The restored sprint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Sprint"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/tags/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The tag id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get a tag by id.",
        "operationId": "get_tag",
        "responses": {
          "200": {
            "description": "The tag data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Delete a tag by id.",
        "operationId": "delete_tag",
        "responses": {
          "204": {
            "description": "The tag has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The tag is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Tag"
        ],
        "summary": "Update a tag by id.",
        "operationId": "patch_tag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Tag fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_type": {
                    "description": "The tag type of this tag.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the tag.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the tag.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the tag.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the tag.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the tag.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the tag.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the tag.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the tag.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the tag. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the tag. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated tag.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tags": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get tags from the index.",
        "operationId": "get_tags_index",
        "responses": {
          "200": {
            "description": "Get the tags from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tag"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Create a tag.",
        "operationId": "post_tag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Tag fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_type": {
                    "description": "The tag type of this tag.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this tag.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this tag.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the tag.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the tag.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the tag.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the tag.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the tag.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the tag.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the tag.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the tag.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the tag. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the tag. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created tags.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tags/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The tag id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Unlock a tag by id.",
        "operationId": "lock_tag",
        "responses": {
          "204": {
            "description": "The tag has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Lock a tag by id.",
        "operationId": "unlock_tag",
        "responses": {
          "200": {
            "description": "The unlocked tag.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/tags/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The tag id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Restore a tag by id.",
        "operationId": "restore_tag",
        "responses": {
          "200": {
            "description": "The restored tag.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Tag"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/teams/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The team id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get a team by id.",
        "operationId": "get_team",
        "responses": {
          "200": {
            "description": "The team data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Delete a team by id.",
        "operationId": "delete_team",
        "responses": {
          "204": {
            "description": "The team has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The team is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Team"
        ],
        "summary": "Update a team by id.",
        "operationId": "patch_team",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Team fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_type": {
                    "description": "The team type of this team.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the team.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the team.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the team.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the team.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the team.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the team.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the team.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the team.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the team. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the team. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated team.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/teams": {
      "get": {
        "tags": [
          "Team"
        ],
        "summary": "Get teams from the index.",
        "operationId": "get_teams_index",
        "responses": {
          "200": {
            "description": "Get the teams from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Team"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Create a team.",
        "operationId": "post_team",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Team fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_type": {
                    "description": "The team type of this team.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this team.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this team.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the team.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the team.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the team.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the team.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the team.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the team.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the team.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the team.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the team. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the team. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created teams.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The team id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Team"
        ],
        "summary": "Unlock a team by id.",
        "operationId": "lock_team",
        "responses": {
          "204": {
            "description": "The team has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "Lock a team by id.",
        "operationId": "unlock_team",
        "responses": {
          "200": {
            "description": "The unlocked team.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/teams/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The team id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Team"
        ],
        "summary": "Restore a team by id.",
        "operationId": "restore_team",
        "responses": {
          "200": {
            "description": "The restored team.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Team"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/tickets/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The ticket id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Get a ticket by id.",
        "operationId": "get_ticket",
        "responses": {
          "200": {
            "description": "The ticket data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Ticket"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Ticket"
        ],
        "summary": "Delete a ticket by id.",
        "operationId": "delete_ticket",
        "responses": {
          "204": {
            "description": "The ticket has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The ticket is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Ticket"
        ],
        "summary": "Update a ticket by id.",
        "operationId": "patch_ticket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Ticket fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_type": {
                    "description": "The ticket type of this ticket.",
                    "type": "string",
                    "nullable": true
                  },
                  "duplicate_id": {
                    "description": "Foreign key: links a duplicate to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "completed_by_id": {
                    "description": "Foreign key: links a completed by user to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "reported_by_id": {
                    "description": "Foreign key: links a reported by user to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_fixed_id": {
                    "description": "Foreign key: links a version fixed to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the ticket.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the ticket.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "canceled": {
                    "description": "Flags: canceled",
                    "type": "boolean"
                  },
                  "closed": {
                    "description": "Flags: closed",
                    "type": "boolean"
                  },
                  "completed": {
                    "description": "Flags: completed",
                    "type": "boolean"
                  },
                  "duplicate": {
                    "description": "Flags: duplicate",
                    "type": "boolean"
                  },
                  "fixed": {
                    "description": "Flags: fixed",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "released": {
                    "description": "Flags: released",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "resolved": {
                    "description": "Flags: resolved",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the ticket.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "title": {
                    "description": "The title of the ticket.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "byline": {
                    "description": "The byline of the ticket.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the ticket.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the ticket.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the ticket.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the ticket.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the ticket. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the ticket. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "key": {
                    "description": "The key of the ticket.",
                    "type": "string",
                    "maxLength": 64
                  },
                  "handler": {
                    "description": "The handler of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "code": {
                    "description": "The code of the ticket.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "key_code_hash": {
                    "description": "The key code hash of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "priority": {
                    "description": "The priority of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "severity": {
                    "description": "The severity of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "resolution": {
                    "description": "The resolution of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "step": {
                    "description": "The step of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "state": {
                    "description": "The state of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "workflow_type": {
                    "description": "The workflow type of the ticket.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "points": {
                    "description": "The points of the ticket.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "story": {
                    "description": "The story of the ticket. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "criteria": {
                    "description": "The criteria of the ticket. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "reproducibility": {
                    "description": "The reproducibility of the ticket.",
                    "type": "number",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "history": {
                    "description": "JSON: history",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Ticket"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Get tickets from the index.",
        "operationId": "get_tickets_index",
        "responses": {
          "200": {
            "description": "Get the tickets from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Ticket"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Create a ticket.",
        "operationId": "post_ticket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Ticket fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_type": {
                    "description": "The ticket type of this ticket.",
                    "type": "string",
                    "nullable": true
                  },
                  "duplicate_id": {
                    "description": "Foreign key: links a duplicate to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "completed_by_id": {
                    "description": "Foreign key: links a completed by user to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "reported_by_id": {
                    "description": "Foreign key: links a reported by user to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_id": {
                    "description": "Foreign key: links a version to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_fixed_id": {
                    "description": "Foreign key: links a version fixed to this ticket.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this ticket.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the ticket.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the ticket.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "canceled": {
                    "description": "Flags: canceled",
                    "type": "boolean"
                  },
                  "closed": {
                    "description": "Flags: closed",
                    "type": "boolean"
                  },
                  "completed": {
                    "description": "Flags: completed",
                    "type": "boolean"
                  },
                  "duplicate": {
                    "description": "Flags: duplicate",
                    "type": "boolean"
                  },
                  "fixed": {
                    "description": "Flags: fixed",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "released": {
                    "description": "Flags: released",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "resolved": {
                    "description": "Flags: resolved",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the ticket.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "title": {
                    "description": "The title of the ticket.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "byline": {
                    "description": "The byline of the ticket.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the ticket.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the ticket.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the ticket.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the ticket.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the ticket. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the ticket. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "key": {
                    "description": "The key of the ticket.",
                    "type": "string",
                    "maxLength": 64
                  },
                  "handler": {
                    "description": "The handler of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "code": {
                    "description": "The code of the ticket.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "key_code_hash": {
                    "description": "The key code hash of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "priority": {
                    "description": "The priority of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "severity": {
                    "description": "The severity of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "resolution": {
                    "description": "The resolution of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "step": {
                    "description": "The step of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "state": {
                    "description": "The state of the ticket.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "workflow_type": {
                    "description": "The workflow type of the ticket.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "points": {
                    "description": "The points of the ticket.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "story": {
                    "description": "The story of the ticket. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "criteria": {
                    "description": "The criteria of the ticket. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "reproducibility": {
                    "description": "The reproducibility of the ticket.",
                    "type": "number",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "history": {
                    "description": "JSON: history",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created tickets.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Ticket"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The ticket id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Ticket"
        ],
        "summary": "Unlock a ticket by id.",
        "operationId": "lock_ticket",
        "responses": {
          "204": {
            "description": "The ticket has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Ticket"
        ],
        "summary": "Lock a ticket by id.",
        "operationId": "unlock_ticket",
        "responses": {
          "200": {
            "description": "The unlocked ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Ticket"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/tickets/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The ticket id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Ticket"
        ],
        "summary": "Restore a ticket by id.",
        "operationId": "restore_ticket",
        "responses": {
          "200": {
            "description": "The restored ticket.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Ticket"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/versions/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The version id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Get a version by id.",
        "operationId": "get_version",
        "responses": {
          "200": {
            "description": "The version data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Version"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Version"
        ],
        "summary": "Delete a version by id.",
        "operationId": "delete_version",
        "responses": {
          "204": {
            "description": "The version has been deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "423": {
            "description": "The version is locked. Unlock to delete."
          }
        }
      },
      "patch": {
        "tags": [
          "Version"
        ],
        "summary": "Update a version by id.",
        "operationId": "patch_version",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Version fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_type": {
                    "description": "The version type of this version.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the version.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the version.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the version.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the version.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the version.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the version.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the version.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the version.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the version. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the version. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Version"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/versions": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Get versions from the index.",
        "operationId": "get_versions_index",
        "responses": {
          "200": {
            "description": "Get the versions from the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Version"
                      }
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Version"
        ],
        "summary": "Create a version.",
        "operationId": "post_version",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The Matrix Version fillable properties.",
                "type": "object",
                "properties": {
                  "owned_by_id": {
                    "description": "Foreign key: links an owned by user to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "parent_id": {
                    "description": "Foreign key: links a parent to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "version_type": {
                    "description": "The version type of this version.",
                    "type": "string",
                    "nullable": true
                  },
                  "backlog_id": {
                    "description": "Foreign key: links a backlog to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "board_id": {
                    "description": "Foreign key: links a board to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "epic_id": {
                    "description": "Foreign key: links an epic to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "flow_id": {
                    "description": "Foreign key: links a flow to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "milestone_id": {
                    "description": "Foreign key: links a milestone to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "note_id": {
                    "description": "Foreign key: links a note to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "project_id": {
                    "description": "Foreign key: links a project to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "release_id": {
                    "description": "Foreign key: links a release to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "roadmap_id": {
                    "description": "Foreign key: links a roadmap to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "source_id": {
                    "description": "Foreign key: links a source to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "sprint_id": {
                    "description": "Foreign key: links a sprint to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "tag_id": {
                    "description": "Foreign key: links a tag to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "team_id": {
                    "description": "Foreign key: links a team to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "ticket_id": {
                    "description": "Foreign key: links a ticket to this version.",
                    "type": "string",
                    "format": "uuid",
                    "nullable": true
                  },
                  "start_at": {
                    "description": "The start at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_start_at": {
                    "description": "The planned start at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "end_at": {
                    "description": "The end at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "planned_end_at": {
                    "description": "The planned end at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "canceled_at": {
                    "description": "The canceled at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "closed_at": {
                    "description": "The closed at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "embargo_at": {
                    "description": "The embargo at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "fixed_at": {
                    "description": "The fixed at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "postponed_at": {
                    "description": "The postponed at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "published_at": {
                    "description": "The published at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "released_at": {
                    "description": "The released at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resumed_at": {
                    "description": "The resumed at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "resolved_at": {
                    "description": "The resolved at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "suspended_at": {
                    "description": "The suspended at date for this version.",
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "gids": {
                    "description": "Permissions: gids",
                    "type": "integer",
                    "format": "int64"
                  },
                  "po": {
                    "description": "Permissions: po",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pg": {
                    "description": "Permissions: pg",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pw": {
                    "description": "Permissions: pw",
                    "type": "integer",
                    "format": "int32"
                  },
                  "only_admin": {
                    "description": "Permissions: only admin",
                    "type": "boolean"
                  },
                  "only_user": {
                    "description": "Permissions: only user",
                    "type": "boolean"
                  },
                  "only_guest": {
                    "description": "Permissions: only guest",
                    "type": "boolean"
                  },
                  "allow_public": {
                    "description": "Permissions: allow public",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The status of the version.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "rank": {
                    "description": "Status: rank",
                    "type": "integer",
                    "format": "int64"
                  },
                  "size": {
                    "description": "Status: size",
                    "type": "integer",
                    "format": "int64"
                  },
                  "icon": {
                    "description": "Ui: icon",
                    "type": "string",
                    "maxLength": 128
                  },
                  "image": {
                    "description": "Ui: image",
                    "type": "string",
                    "maxLength": 512
                  },
                  "avatar": {
                    "description": "Ui: avatar",
                    "type": "string",
                    "maxLength": 512
                  },
                  "ui": {
                    "description": "The ui of the version.",
                    "type": "object",
                    "nullable": true
                  },
                  "active": {
                    "description": "Flags: active",
                    "type": "boolean"
                  },
                  "flagged": {
                    "description": "Flags: flagged",
                    "type": "boolean"
                  },
                  "internal": {
                    "description": "Flags: internal",
                    "type": "boolean"
                  },
                  "locked": {
                    "description": "Flags: locked",
                    "type": "boolean"
                  },
                  "pending": {
                    "description": "Flags: pending",
                    "type": "boolean"
                  },
                  "planned": {
                    "description": "Flags: planned",
                    "type": "boolean"
                  },
                  "problem": {
                    "description": "Flags: problem",
                    "type": "boolean"
                  },
                  "published": {
                    "description": "Flags: published",
                    "type": "boolean"
                  },
                  "retired": {
                    "description": "Flags: retired",
                    "type": "boolean"
                  },
                  "suspended": {
                    "description": "Flags: suspended",
                    "type": "boolean"
                  },
                  "unknown": {
                    "description": "Flags: unknown",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "The label of the version.",
                    "type": "string",
                    "maxLength": 128
                  },
                  "byline": {
                    "description": "The byline of the version.",
                    "type": "string",
                    "maxLength": 255
                  },
                  "slug": {
                    "description": "The slug of the version.",
                    "type": "string",
                    "maxLength": 128,
                    "nullable": true
                  },
                  "url": {
                    "description": "The url of the version.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "description": {
                    "description": "The description of the version.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "introduction": {
                    "description": "The introduction of the version.",
                    "type": "string",
                    "maxLength": 512
                  },
                  "content": {
                    "description": "The content of the version. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "summary": {
                    "description": "The summary of the version. Allows HTML.",
                    "type": "string",
                    "nullable": true
                  },
                  "assets": {
                    "description": "JSON: assets",
                    "type": "object",
                    "nullable": true
                  },
                  "backlog": {
                    "description": "JSON: backlog",
                    "type": "object",
                    "nullable": true
                  },
                  "board": {
                    "description": "JSON: board",
                    "type": "object",
                    "nullable": true
                  },
                  "flow": {
                    "description": "JSON: flow",
                    "type": "object",
                    "nullable": true
                  },
                  "meta": {
                    "description": "JSON: meta",
                    "type": "object",
                    "nullable": true
                  },
                  "options": {
                    "description": "JSON: options",
                    "type": "object",
                    "nullable": true
                  },
                  "roadmap": {
                    "description": "JSON: roadmap",
                    "type": "object",
                    "nullable": true
                  },
                  "sources": {
                    "description": "JSON: sources",
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created versions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Version"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "The label field is required."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/versions/lock/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The version id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "delete": {
        "tags": [
          "Version"
        ],
        "summary": "Unlock a version by id.",
        "operationId": "lock_version",
        "responses": {
          "204": {
            "description": "The version has been unlocked."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Version"
        ],
        "summary": "Lock a version by id.",
        "operationId": "unlock_version",
        "responses": {
          "200": {
            "description": "The unlocked version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Version"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/versions/restore/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "The version id.",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "put": {
        "tags": [
          "Version"
        ],
        "summary": "Restore a version by id.",
        "operationId": "restore_version",
        "responses": {
          "200": {
            "description": "The restored version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Version"
                    },
                    "meta": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Board": {
        "description": "The Matrix Board model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "board_type": {
            "description": "The board type of this board.",
            "type": "string",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this board.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the board was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the board was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the board was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this board.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the board.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the board.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the board.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the board.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the board.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the board.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the board.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the board.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the board.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the board. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the board. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Epic": {
        "description": "The Matrix Epic model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_type": {
            "description": "The epic type of this epic.",
            "type": "string",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this epic.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the epic was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the epic was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the epic was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this epic.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the epic.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the epic.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the epic.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the epic.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the epic.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the epic.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the epic.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the epic.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the epic.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the epic. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the epic. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Backlog": {
        "description": "The Matrix Backlog model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "backlog_type": {
            "description": "The backlog type of this backlog.",
            "type": "string",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this backlog.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the backlog was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the backlog was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the backlog was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this backlog.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the backlog.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the backlog.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the backlog.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the backlog.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the backlog.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the backlog.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the backlog.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the backlog.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the backlog.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the backlog. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the backlog. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Flow": {
        "description": "The Matrix Flow model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this flow.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this flow.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this flow.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this flow.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_type": {
            "description": "The flow type of this flow.",
            "type": "string",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this flow.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this flow.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this flow.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the flow was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the flow was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the flow was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this flow.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the flow.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the flow.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the flow.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the flow.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the flow.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the flow.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the flow.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the flow.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the flow.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the flow. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the flow. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Milestone": {
        "description": "The Matrix Milestone model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_type": {
            "description": "The milestone type of this milestone.",
            "type": "string",
            "nullable": true
          },
          "backlog_id": {
            "description": "Foreign key: links a backlog to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this milestone.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the milestone was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the milestone was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the milestone was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this milestone.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the milestone.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the milestone.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the milestone.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the milestone.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the milestone.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the milestone.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the milestone.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the milestone.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the milestone.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the milestone. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the milestone. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Note": {
        "description": "The Matrix Note model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this note.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this note.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this note.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this note.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_type": {
            "description": "The note type of this note.",
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the note was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the note was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the note was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this note.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the note.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the note.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the note.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the note.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the note.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the note.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the note.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the note.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the note.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the note. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the note. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Project": {
        "description": "The Matrix Project model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_type": {
            "description": "The project type of this project.",
            "type": "string",
            "nullable": true
          },
          "backlog_id": {
            "description": "Foreign key: links a backlog to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this project.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the project was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the project was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the project was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this project.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the project.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the project.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the project.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the project.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the project.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the project.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the project.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the project.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the project.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the project. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the project. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Release": {
        "description": "The Matrix Release model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_type": {
            "description": "The release type of this release.",
            "type": "string",
            "nullable": true
          },
          "backlog_id": {
            "description": "Foreign key: links a backlog to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this release.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the release was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the release was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the release was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this release.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the release.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the release.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the release.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the release.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the release.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the release.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the release.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the release.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the release.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the release. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the release. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Roadmap": {
        "description": "The Matrix Roadmap model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_type": {
            "description": "The roadmap type of this roadmap.",
            "type": "string",
            "nullable": true
          },
          "backlog_id": {
            "description": "Foreign key: links a backlog to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this roadmap.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the roadmap was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the roadmap was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the roadmap was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this roadmap.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the roadmap.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the roadmap.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the roadmap.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the roadmap.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the roadmap.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the roadmap.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the roadmap.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the roadmap.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the roadmap.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the roadmap. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the roadmap. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Source": {
        "description": "The Matrix Source model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_type": {
            "description": "The source type of this source.",
            "type": "string",
            "nullable": true
          },
          "backlog_id": {
            "description": "Foreign key: links a backlog to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this source.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the source was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the source was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the source was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this source.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the source.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the source.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the source.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the source.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the source.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the source.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the source.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the source.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the source.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the source. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the source. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Sprint": {
        "description": "The Matrix Sprint model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_type": {
            "description": "The sprint type of this sprint.",
            "type": "string",
            "nullable": true
          },
          "backlog_id": {
            "description": "Foreign key: links a backlog to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this sprint.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the sprint was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the sprint was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the sprint was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this sprint.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the sprint.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the sprint.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the sprint.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the sprint.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the sprint.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the sprint.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the sprint.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the sprint.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the sprint.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the sprint. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the sprint. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Tag": {
        "description": "The Matrix Tag model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_type": {
            "description": "The tag type of this tag.",
            "type": "string",
            "nullable": true
          },
          "backlog_id": {
            "description": "Foreign key: links a backlog to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this tag.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the tag was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the tag was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the tag was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this tag.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the tag.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the tag.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the tag.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the tag.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the tag.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the tag.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the tag.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the tag.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the tag.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the tag. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the tag. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Team": {
        "description": "The Matrix Team model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_type": {
            "description": "The team type of this team.",
            "type": "string",
            "nullable": true
          },
          "backlog_id": {
            "description": "Foreign key: links a backlog to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this team.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the team was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the team was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the team was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this team.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the team.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the team.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the team.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the team.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the team.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the team.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the team.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the team.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the team.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the team. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the team. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Ticket": {
        "description": "The Matrix Ticket model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_type": {
            "description": "The ticket type of this ticket.",
            "type": "string",
            "nullable": true
          },
          "duplicate_id": {
            "description": "Foreign key: links a duplicate to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "backlog_id": {
            "description": "Foreign key: links a backlog to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "completed_by_id": {
            "description": "Foreign key: links a completed by user to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "reported_by_id": {
            "description": "Foreign key: links a reported by user to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_id": {
            "description": "Foreign key: links a version to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_fixed_id": {
            "description": "Foreign key: links a version fixed to this ticket.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the ticket was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the ticket was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the ticket was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this ticket.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the ticket.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the ticket.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the ticket.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the ticket.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the ticket.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the ticket.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the ticket.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the ticket.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the ticket.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the ticket. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the ticket. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "key": {
            "description": "The key of the ticket.",
            "type": "string",
            "maxLength": 64
          },
          "handler": {
            "description": "The handler of the ticket.",
            "type": "string",
            "maxLength": 32
          },
          "code": {
            "description": "The code of the ticket.",
            "type": "integer",
            "format": "int64"
          },
          "key_code_hash": {
            "description": "The key code hash of the ticket.",
            "type": "string",
            "maxLength": 32
          },
          "priority": {
            "description": "The priority of the ticket.",
            "type": "string",
            "maxLength": 32
          },
          "severity": {
            "description": "The severity of the ticket.",
            "type": "string",
            "maxLength": 32
          },
          "resolution": {
            "description": "The resolution of the ticket.",
            "type": "string",
            "maxLength": 32
          },
          "step": {
            "description": "The step of the ticket.",
            "type": "string",
            "maxLength": 32
          },
          "state": {
            "description": "The state of the ticket.",
            "type": "string",
            "maxLength": 32
          },
          "workflow_type": {
            "description": "The workflow type of the ticket.",
            "type": "string",
            "maxLength": 128
          },
          "points": {
            "description": "The points of the ticket.",
            "type": "integer",
            "format": "int32"
          },
          "story": {
            "description": "The story of the ticket. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "criteria": {
            "description": "The criteria of the ticket. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "reproducibility": {
            "description": "The reproducibility of the ticket.",
            "type": "number",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "history": {
            "description": "JSON: history",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      },
      "Version": {
        "description": "The Matrix Version model.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key.",
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "created_by_id": {
            "description": "Foreign key: links a created by user to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "modified_by_id": {
            "description": "Foreign key: links a modified by user to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "owned_by_id": {
            "description": "Foreign key: links an owned by user to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "parent_id": {
            "description": "Foreign key: links a parent to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "version_type": {
            "description": "The version type of this version.",
            "type": "string",
            "nullable": true
          },
          "backlog_id": {
            "description": "Foreign key: links a backlog to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "board_id": {
            "description": "Foreign key: links a board to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "epic_id": {
            "description": "Foreign key: links an epic to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "flow_id": {
            "description": "Foreign key: links a flow to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "milestone_id": {
            "description": "Foreign key: links a milestone to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "note_id": {
            "description": "Foreign key: links a note to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "project_id": {
            "description": "Foreign key: links a project to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "release_id": {
            "description": "Foreign key: links a release to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "roadmap_id": {
            "description": "Foreign key: links a roadmap to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source_id": {
            "description": "Foreign key: links a source to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "sprint_id": {
            "description": "Foreign key: links a sprint to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tag_id": {
            "description": "Foreign key: links a tag to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "team_id": {
            "description": "Foreign key: links a team to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ticket_id": {
            "description": "Foreign key: links a ticket to this version.",
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "description": "Denotes the date and time, the version was created.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "description": "Denotes the date and time, the version was last modified.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "deleted_at": {
            "description": "Denotes the date and time, the version was put in the trash.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "start_at": {
            "description": "The start at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_start_at": {
            "description": "The planned start at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end_at": {
            "description": "The end at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planned_end_at": {
            "description": "The planned end at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "canceled_at": {
            "description": "The canceled at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_at": {
            "description": "The closed at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "embargo_at": {
            "description": "The embargo at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fixed_at": {
            "description": "The fixed at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "postponed_at": {
            "description": "The postponed at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published_at": {
            "description": "The published at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "released_at": {
            "description": "The released at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resumed_at": {
            "description": "The resumed at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "resolved_at": {
            "description": "The resolved at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suspended_at": {
            "description": "The suspended at date for this version.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gids": {
            "description": "Permissions: gids",
            "type": "integer",
            "format": "int64"
          },
          "po": {
            "description": "Permissions: po",
            "type": "integer",
            "format": "int32"
          },
          "pg": {
            "description": "Permissions: pg",
            "type": "integer",
            "format": "int32"
          },
          "pw": {
            "description": "Permissions: pw",
            "type": "integer",
            "format": "int32"
          },
          "only_admin": {
            "description": "Permissions: only admin",
            "type": "boolean"
          },
          "only_user": {
            "description": "Permissions: only user",
            "type": "boolean"
          },
          "only_guest": {
            "description": "Permissions: only guest",
            "type": "boolean"
          },
          "allow_public": {
            "description": "Permissions: allow public",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the version.",
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "description": "Status: rank",
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "description": "Status: size",
            "type": "integer",
            "format": "int64"
          },
          "icon": {
            "description": "Ui: icon",
            "type": "string",
            "maxLength": 128
          },
          "image": {
            "description": "Ui: image",
            "type": "string",
            "maxLength": 512
          },
          "avatar": {
            "description": "Ui: avatar",
            "type": "string",
            "maxLength": 512
          },
          "ui": {
            "description": "The ui of the version.",
            "type": "object",
            "nullable": true
          },
          "active": {
            "description": "Flags: active",
            "type": "boolean"
          },
          "canceled": {
            "description": "Flags: canceled",
            "type": "boolean"
          },
          "closed": {
            "description": "Flags: closed",
            "type": "boolean"
          },
          "completed": {
            "description": "Flags: completed",
            "type": "boolean"
          },
          "duplicate": {
            "description": "Flags: duplicate",
            "type": "boolean"
          },
          "fixed": {
            "description": "Flags: fixed",
            "type": "boolean"
          },
          "flagged": {
            "description": "Flags: flagged",
            "type": "boolean"
          },
          "internal": {
            "description": "Flags: internal",
            "type": "boolean"
          },
          "locked": {
            "description": "Flags: locked",
            "type": "boolean"
          },
          "pending": {
            "description": "Flags: pending",
            "type": "boolean"
          },
          "planned": {
            "description": "Flags: planned",
            "type": "boolean"
          },
          "problem": {
            "description": "Flags: problem",
            "type": "boolean"
          },
          "published": {
            "description": "Flags: published",
            "type": "boolean"
          },
          "released": {
            "description": "Flags: released",
            "type": "boolean"
          },
          "retired": {
            "description": "Flags: retired",
            "type": "boolean"
          },
          "resolved": {
            "description": "Flags: resolved",
            "type": "boolean"
          },
          "suspended": {
            "description": "Flags: suspended",
            "type": "boolean"
          },
          "unknown": {
            "description": "Flags: unknown",
            "type": "boolean"
          },
          "label": {
            "description": "The label of the version.",
            "type": "string",
            "maxLength": 128
          },
          "title": {
            "description": "The title of the version.",
            "type": "string",
            "maxLength": 255
          },
          "byline": {
            "description": "The byline of the version.",
            "type": "string",
            "maxLength": 255
          },
          "slug": {
            "description": "The slug of the version.",
            "type": "string",
            "maxLength": 128,
            "nullable": true
          },
          "url": {
            "description": "The url of the version.",
            "type": "string",
            "maxLength": 512
          },
          "description": {
            "description": "The description of the version.",
            "type": "string",
            "maxLength": 512
          },
          "introduction": {
            "description": "The introduction of the version.",
            "type": "string",
            "maxLength": 512
          },
          "content": {
            "description": "The content of the version. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "summary": {
            "description": "The summary of the version. Allows HTML.",
            "type": "string",
            "nullable": true
          },
          "assets": {
            "description": "JSON: assets",
            "type": "object",
            "nullable": true
          },
          "backlog": {
            "description": "JSON: backlog",
            "type": "object",
            "nullable": true
          },
          "board": {
            "description": "JSON: board",
            "type": "object",
            "nullable": true
          },
          "flow": {
            "description": "JSON: flow",
            "type": "object",
            "nullable": true
          },
          "meta": {
            "description": "JSON: meta",
            "type": "object",
            "nullable": true
          },
          "notes": {
            "description": "JSON: notes",
            "type": "array",
            "items": {
              "type": "object"
            },
            "nullable": true
          },
          "options": {
            "description": "JSON: options",
            "type": "object",
            "nullable": true
          },
          "roadmap": {
            "description": "JSON: roadmap",
            "type": "object",
            "nullable": true
          },
          "sources": {
            "description": "JSON: sources",
            "type": "object",
            "nullable": true
          }
        }
      }
    }
  }
}
